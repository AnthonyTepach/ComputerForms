/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anthonytepach.vistas.internos;

import com.anthonytepach.configuracion.LoggerRegistros;
import com.anthonytepach.controlador.C_Proyecto;
import com.anthonytepach.controlador.C_Reporte;
import com.anthonytepach.vistas.VMenu;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Anthony Tepach
 */
public class V_ConsultaProyecto extends javax.swing.JInternalFrame {

    LoggerRegistros loggger = new LoggerRegistros(this.getClass());

    /**
     * Creates new form V_ConsultaProyecto
     */
    public V_ConsultaProyecto() {
        initComponents();
        cargarTabla();
        this.setTitle("Proyectos del "+(new Date().getYear()+1900));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_proyectos = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Proyectos");
        setPreferredSize(new java.awt.Dimension(1000, 500));
        getContentPane().setLayout(new java.awt.CardLayout());

        jtb_proyectos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtb_proyectos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_proyectosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtb_proyectos);

        getContentPane().add(jScrollPane1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtb_proyectosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_proyectosMouseClicked
        int column = jtb_proyectos.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / jtb_proyectos.getRowHeight();
        String clave_proyecto=null;
        String nombre_proyecto=null;
        if (row < jtb_proyectos.getRowCount() && row >= 0 && column < jtb_proyectos.getColumnCount() && column >= 0) {
            Object value = jtb_proyectos.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton bnt = (JButton) value;
                if (bnt.getName().equals("V")) {
                    clave_proyecto=(String) jtb_proyectos.getValueAt(row, 0);
                    verOP(clave_proyecto);
                }else if(bnt.getName().equals("N")){
                    clave_proyecto=(String) jtb_proyectos.getValueAt(row, 0);
                    nombre_proyecto=(String) jtb_proyectos.getValueAt(row, 1);
                    añadirOP(clave_proyecto,nombre_proyecto);
                }else if(bnt.getName().equals("R")){
                   
                    clave_proyecto=(String) jtb_proyectos.getValueAt(row, 0);
                    verPDF(clave_proyecto);
                }
                
            }
        }
    }//GEN-LAST:event_jtb_proyectosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtb_proyectos;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla() {
        C_Proyecto cpr = new C_Proyecto();
        try {
            cpr.verTabla(jtb_proyectos);
        } catch (Exception ex) {
            loggger.setError(ex.getMessage(), ex.fillInStackTrace());
        }
    }

    private void verOP(String clave_proyecto) {
       V_ConsultaOP vop=new V_ConsultaOP(clave_proyecto);
        VMenu.jdp_principal.add(vop);
        vop.toFront();
        vop.setVisible(true);
    }

    private void añadirOP(String clave_proyecto,String Nombre) {
        RegistrarOP rop = new RegistrarOP(clave_proyecto,Nombre);
            VMenu.jdp_principal.add(rop);
            rop.toFront();
            rop.setVisible(true);
    }

    private void verPDF(String clave_proyecto) {
        try {
            C_Reporte crp=new C_Reporte(clave_proyecto);
            try {
                Thread hiloReporte=new Thread (crp,"Reporte");
                hiloReporte.start();
                if (!hiloReporte.isAlive()) {
                    hiloReporte.destroy();
                }
                
            } catch (Exception ex) {
                loggger.setError(ex.getMessage(), ex.fillInStackTrace());
            }
        } catch (Exception ex) {
           loggger.setError(ex.getMessage(), ex.fillInStackTrace());
        }
    }
    
}
